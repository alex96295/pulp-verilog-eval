Specification Document for FIFOV3 Module

Overview & Assumptions

The FIFOV3 module is a parameterizable first-in, first-out (FIFO) data structure designed for use in digital systems. It supports variable data widths and depth configurations, with an optional "fall-through" mode that allows immediate output of data when the FIFO is empty. The FIFO is designed to operate synchronously with a clock signal and includes features for flushing the queue and handling full and empty states robustly.

Assumptions

- The FIFO operates with a single clock domain.
- The FIFO supports asynchronous reset, which is active low.
- The FIFO can be configured to either a standard mode or a fall-through mode, where data passes directly from input to output when the FIFO is empty.

Interface

Clock and Reset

- clk_i: Input clock signal. The module samples inputs and updates outputs on the rising edge of this clock.
- rst_ni: Active-low asynchronous reset input. Resets internal state when asserted.

Control Inputs

- flush_i: Input signal to clear the FIFO. Active high; when asserted, clears all stored data and resets the FIFO state.
- testmode_i: Input signal to enable or disable clock gating for test purposes. Active high.

Data Interface

- data_i: Input data signal. Width is parameterized (DATA_WIDTH).
- push_i: Input signal indicating that data_i is valid and should be pushed into the FIFO. Active high.
- data_o: Output data signal. Width matches data_i.
- pop_i: Input signal indicating that the current data at the head of the FIFO should be removed. Active high.

Status Outputs

- full_o: Output signal indicating that the FIFO is full and cannot accept new data. Active high.
- empty_o: Output signal indicating that the FIFO is empty and no data is available for reading. Active high.
- usage_o: Output signal indicating the current number of data elements in the FIFO. Width depends on the FIFO depth (ADDR_DEPTH).

Protocols/Handshakes

The module uses a simple valid/ready protocol:

- Push Operation: Data is pushed into the FIFO on the rising clock edge when push_i is asserted and full_o is not asserted.
- Pop Operation: Data is removed from the FIFO on the rising clock edge when pop_i is asserted and empty_o is not asserted.

Behavioral Requirements

1. Reset Behavior: Upon reset (rst_ni asserted low), the FIFO should clear all its data, and all pointers and counters should be reset to initial states. The empty_o signal should be asserted.
   
2. Flush Behavior: When flush_i is asserted, the FIFO should clear all its data, irrespective of the current state, and reset all pointers and counters.

3. Backpressure Handling: 
   - The FIFO should not allow data pushes when full_o is asserted.
   - The FIFO should not allow data pops when empty_o is asserted.

4. Fall-Through Mode: If configured in fall-through mode (FALL_THROUGH parameter), data should appear on data_o immediately when data_i is valid and the FIFO is empty.

5. Ordering: The FIFO must preserve the order of data elements, ensuring that data is output in the same sequence as it was input.

6. Error Handling: 
   - Operations attempted when the FIFO is full or empty (pushing into full or popping from empty) should be ignored, and the FIFO should remain stable.

Configuration Parameters

- FALL_THROUGH: Boolean parameter to enable fall-through mode. Default is false (1'b0).
- DATA_WIDTH: Integer parameter specifying the width of the data signals. Default is 32 bits.
- DEPTH: Integer parameter defining the depth of the FIFO, which can range from 1 to 2^32.

Throughput/Latency Expectations

- The FIFO should handle one push and one pop operation per clock cycle, provided it is not in a full or empty state, respectively.

Clocking/Reset Domains and Constraints

- All operations are synchronous to the rising edge of clk_i.
- Reset (rst_ni) is asynchronous and active low, affecting all internal states immediately when asserted.

Example Timing/Truth Tables

Timing Example

  Clock Cycle   push_i   pop_i   data_i   data_o   full_o   empty_o   Description                   
 ------------- ---------- --------- ---------- ---------- ---------- ----------- ------------------------------ 
  1             1          0         0xA        -          0          1           Push data 0xA, FIFO was empty 
  2             0          1         -          0xA        0          0           Pop data 0xA, FIFO becomes empty again  

Truth Table for Fall-Through Mode

  empty_o   push_i   pop_i   data_o   Description                      
 ----------- ---------- --------- ---------- --------------------------------- 
  1           1          0         data_i   Data passes directly to output   
  1           1          1         data_i   Data is pushed and popped immediately  

This specification provides a comprehensive view of the FIFOV3 module's expected behavior and interface, ensuring alignment with system requirements while avoiding implementation details.
