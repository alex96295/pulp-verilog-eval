Design a module called TopModule. This module is intended to function as a First-In-First-Out (FIFO) buffer with configurable depth and data width. It supports both standard FIFO operation and a fall-through mode, which allows data to be directly output when the FIFO is empty. The module interfaces with a clock and reset signal and includes control signals for data input and output operations.

Overview & Assumptions

- The TopModule is a FIFO buffer that can store a sequence of data items.
- It supports two modes: standard FIFO operation and fall-through mode.
- The module operates synchronously with the provided clock signal.
- It uses an active-low asynchronous reset to initialize or reset its state.
- The module is capable of providing status information about its current state (full or empty).

Interface

Inputs:

- clk_i (1 bit): Clock signal. The module operates on the rising edge of this signal.
- rst_ni (1 bit): Asynchronous reset, active low. Resets the module state when asserted.
- flush_i (1 bit): Flush signal. Clears the contents of the FIFO when asserted.
- testmode_i (1 bit): Test mode signal. This is used to bypass clock gating for testing purposes.
- data_i (DATA_WIDTH bits): Data input bus, width defined by the DATA_WIDTH parameter.
- push_i (1 bit): Push control signal. When asserted, indicates that data on data_i should be pushed into the FIFO.
- pop_i (1 bit): Pop control signal. When asserted, indicates that data should be popped from the FIFO.

Outputs:

- full_o (1 bit): Full flag. Asserted when the FIFO is full and cannot accept more data.
- empty_o (1 bit): Empty flag. Asserted when the FIFO is empty and no data is available for reading.
- usage_o (ADDR_DEPTH bits): Indicates the number of data elements currently stored in the FIFO.
- data_o (DATA_WIDTH bits): Data output bus. Provides the data at the head of the FIFO when data is available.

Protocols/Handshakes

- Push Operation: Data is pushed into the FIFO when push_i is asserted and full_o is not asserted. The data on data_i is captured into the FIFO.
- Pop Operation: Data is popped from the FIFO when pop_i is asserted and empty_o is not asserted. The data is then provided on data_o.

Behavioral Requirements

- Reset Behavior: On the assertion of rst_ni, the FIFO resets its state, clearing all stored data and resetting pointers.
- Flush Behavior: When flush_i is asserted, the FIFO clears its contents and resets internal pointers.
- Full and Empty Conditions: The full_o signal is asserted when the FIFO reaches its maximum capacity. The empty_o signal is asserted when the FIFO has no data available for reading.
- Fall-Through Mode: When enabled, if the FIFO is empty and a push operation occurs, the data_i is immediately available on data_o.

Configuration Parameters

- FALL_THROUGH (bit): Configures the module for fall-through behavior when set to 1.
- DATA_WIDTH (unsigned int): Specifies the width of the data buses (data_i and data_o). Typical values are powers of two.
- DEPTH (unsigned int): Specifies the depth of the FIFO. Must be greater than 0.

Throughput/Latency Expectations

- The FIFO provides single-cycle access time for push and pop operations, assuming no backpressure from full or empty states.
- In fall-through mode, data can be output in the same cycle as a push operation if the FIFO is empty.

Clocking/Reset Domains and Constraints

- The module operates entirely within a single clock domain, defined by clk_i.
- The reset signal rst_ni is asynchronous and active low, affecting all internal state elements.

Example Timing/Truth Tables

  Operation   push_i   pop_i   full_o   empty_o   Result                 
 ----------- ---------- --------- ---------- ----------- ----------------------- 
  Push        1          0         0          X           Data pushed, not full  
  Push        1          0         1          X           No operation, full     
  Pop         0          1         X          0           Data popped, not empty 
  Pop         0          1         X          1           No operation, empty    
  Both        1          1         0          0           Push and pop executed  

This specification ensures that the TopModule is designed to handle typical FIFO operations with additional functionalities such as fall-through mode and flushing capability, providing flexibility in various applications.
